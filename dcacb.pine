//@version=3
study("Dollar Cost Average Cost Basis", overlay=true)
// Shows the cost-basis for dollar cost averaging
// note: this code was generated using Bash because pinescript does not have arrays/collections
// and you can't run plot within a for loop :(
// code here: https://github.com/atomantic/pine_scripts
// Lightning Network Satoshi Tips Accepted https://tippin.me/@antic

price=input(close, title="Source")
// plot the price for use in color fills
plot_price = plot(price)
color_fill_sell = #a20000
color_fill_buy = #017d13
color_fill_transp = input(85, title="Fill Transparency")
rolling_window = input(defval=false, type=bool, title="Rolling Window?")

time_delta = (timenow - time)
milli_interval = 1000 * 60 * 60 * 24 * interval
dollars = 1000

milli_2190 = milli_interval * 2190 
within_2190 = time_delta < milli_2190
total_2190 = 0.0
spent_2190 = 2190 * dollars
if rolling_window
    spent_2190 := within_2190 ? nz(spent_2190[1])+dollars : 0
    quant_2190 = within_2190 ? dollars/price : 0.0
    total_2190 := nz(total_2190[1])+quant_2190
else
    quant_2190 = dollars/price // how many fractions/units bought this period
    for i = 1 to 2190
        total_2190 := total_2190+quant_2190[i]
basis_2190 = spent_2190/total_2190
plot_2190 = plot(basis_2190, linewidth=8, color=#BB8CFF, title="2190 days of DCA")
fill(plot1=plot_2190, plot2=plot_price, color=price > basis_2190 ? color_fill_sell : color_fill_buy, transp=color_fill_transp)


milli_1460 = milli_interval * 1460 
within_1460 = time_delta < milli_1460
total_1460 = 0.0
spent_1460 = 1460 * dollars
if rolling_window
    spent_1460 := within_1460 ? nz(spent_1460[1])+dollars : 0
    quant_1460 = within_1460 ? dollars/price : 0.0
    total_1460 := nz(total_1460[1])+quant_1460
else
    quant_1460 = dollars/price // how many fractions/units bought this period
    for i = 1 to 1460
        total_1460 := total_1460+quant_1460[i]
basis_1460 = spent_1460/total_1460
plot_1460 = plot(basis_1460, linewidth=7, color=#AA7BEE, title="1460 days of DCA")
fill(plot1=plot_1460, plot2=plot_price, color=price > basis_1460 ? color_fill_sell : color_fill_buy, transp=color_fill_transp)


milli_730 = milli_interval * 730 
within_730 = time_delta < milli_730
total_730 = 0.0
spent_730 = 730 * dollars
if rolling_window
    spent_730 := within_730 ? nz(spent_730[1])+dollars : 0
    quant_730 = within_730 ? dollars/price : 0.0
    total_730 := nz(total_730[1])+quant_730
else
    quant_730 = dollars/price // how many fractions/units bought this period
    for i = 1 to 730
        total_730 := total_730+quant_730[i]
basis_730 = spent_730/total_730
plot_730 = plot(basis_730, linewidth=6, color=#996ADD, title="730 days of DCA")
fill(plot1=plot_730, plot2=plot_price, color=price > basis_730 ? color_fill_sell : color_fill_buy, transp=color_fill_transp)


milli_365 = milli_interval * 365 
within_365 = time_delta < milli_365
total_365 = 0.0
spent_365 = 365 * dollars
if rolling_window
    spent_365 := within_365 ? nz(spent_365[1])+dollars : 0
    quant_365 = within_365 ? dollars/price : 0.0
    total_365 := nz(total_365[1])+quant_365
else
    quant_365 = dollars/price // how many fractions/units bought this period
    for i = 1 to 365
        total_365 := total_365+quant_365[i]
basis_365 = spent_365/total_365
plot_365 = plot(basis_365, linewidth=5, color=#8859CC, title="365 days of DCA")
fill(plot1=plot_365, plot2=plot_price, color=price > basis_365 ? color_fill_sell : color_fill_buy, transp=color_fill_transp)

total_365_future_1 = total_365[0]-((total_365/365)*2)+nz(quant_365[0],0)
basis_365_future_1 = spent_365/total_365_future_1
plot(basis_365_future_1, show_last=2, offset=1, linewidth=5, color=#8859CC) 
        
total_365_future_2 = total_365_future_1-(2*(total_365_future_1[0]/365))+nz(quant_365[0],0)
basis_365_future_2 = spent_365/total_365_future_2
plot(basis_365_future_2, show_last=1, offset=2, linewidth=5, color=#8859CC) 
        
total_365_future_3 = total_365_future_2-(2*(total_365_future_2[0]/365))+nz(quant_365[0],0)
basis_365_future_3 = spent_365/total_365_future_3
plot(basis_365_future_3, show_last=1, offset=3, linewidth=5, color=#8859CC) 
        
total_365_future_4 = total_365_future_3-(2*(total_365_future_3[0]/365))+nz(quant_365[0],0)
basis_365_future_4 = spent_365/total_365_future_4
plot(basis_365_future_4, show_last=1, offset=4, linewidth=5, color=#8859CC) 
        
total_365_future_5 = total_365_future_4-(2*(total_365_future_4[0]/365))+nz(quant_365[0],0)
basis_365_future_5 = spent_365/total_365_future_5
plot(basis_365_future_5, show_last=1, offset=5, linewidth=5, color=#8859CC) 
        
total_365_future_6 = total_365_future_5-(2*(total_365_future_5[0]/365))+nz(quant_365[0],0)
basis_365_future_6 = spent_365/total_365_future_6
plot(basis_365_future_6, show_last=1, offset=6, linewidth=5, color=#8859CC) 
        
total_365_future_7 = total_365_future_6-(2*(total_365_future_6[0]/365))+nz(quant_365[0],0)
basis_365_future_7 = spent_365/total_365_future_7
plot(basis_365_future_7, show_last=1, offset=7, linewidth=5, color=#8859CC) 
        
total_365_future_8 = total_365_future_7-(2*(total_365_future_7[0]/365))+nz(quant_365[0],0)
basis_365_future_8 = spent_365/total_365_future_8
plot(basis_365_future_8, show_last=1, offset=8, linewidth=5, color=#8859CC) 
        
total_365_future_9 = total_365_future_8-(2*(total_365_future_8[0]/365))+nz(quant_365[0],0)
basis_365_future_9 = spent_365/total_365_future_9
plot(basis_365_future_9, show_last=1, offset=9, linewidth=5, color=#8859CC) 
        
total_365_future_10 = total_365_future_9-(2*(total_365_future_9[0]/365))+nz(quant_365[0],0)
basis_365_future_10 = spent_365/total_365_future_10
plot(basis_365_future_10, show_last=1, offset=10, linewidth=5, color=#8859CC) 
        
total_365_future_11 = total_365_future_10-(2*(total_365_future_10[0]/365))+nz(quant_365[0],0)
basis_365_future_11 = spent_365/total_365_future_11
plot(basis_365_future_11, show_last=1, offset=11, linewidth=5, color=#8859CC) 
        
total_365_future_12 = total_365_future_11-(2*(total_365_future_11[0]/365))+nz(quant_365[0],0)
basis_365_future_12 = spent_365/total_365_future_12
plot(basis_365_future_12, show_last=1, offset=12, linewidth=5, color=#8859CC) 
        
total_365_future_13 = total_365_future_12-(2*(total_365_future_12[0]/365))+nz(quant_365[0],0)
basis_365_future_13 = spent_365/total_365_future_13
plot(basis_365_future_13, show_last=1, offset=13, linewidth=5, color=#8859CC) 
        
total_365_future_14 = total_365_future_13-(2*(total_365_future_13[0]/365))+nz(quant_365[0],0)
basis_365_future_14 = spent_365/total_365_future_14
plot(basis_365_future_14, show_last=1, offset=14, linewidth=5, color=#8859CC) 
        
total_365_future_15 = total_365_future_14-(2*(total_365_future_14[0]/365))+nz(quant_365[0],0)
basis_365_future_15 = spent_365/total_365_future_15
plot(basis_365_future_15, show_last=1, offset=15, linewidth=5, color=#8859CC) 
        
total_365_future_16 = total_365_future_15-(2*(total_365_future_15[0]/365))+nz(quant_365[0],0)
basis_365_future_16 = spent_365/total_365_future_16
plot(basis_365_future_16, show_last=1, offset=16, linewidth=5, color=#8859CC) 
        
total_365_future_17 = total_365_future_16-(2*(total_365_future_16[0]/365))+nz(quant_365[0],0)
basis_365_future_17 = spent_365/total_365_future_17
plot(basis_365_future_17, show_last=1, offset=17, linewidth=5, color=#8859CC) 
        
total_365_future_18 = total_365_future_17-(2*(total_365_future_17[0]/365))+nz(quant_365[0],0)
basis_365_future_18 = spent_365/total_365_future_18
plot(basis_365_future_18, show_last=1, offset=18, linewidth=5, color=#8859CC) 
        
total_365_future_19 = total_365_future_18-(2*(total_365_future_18[0]/365))+nz(quant_365[0],0)
basis_365_future_19 = spent_365/total_365_future_19
plot(basis_365_future_19, show_last=1, offset=19, linewidth=5, color=#8859CC) 
        
total_365_future_20 = total_365_future_19-(2*(total_365_future_19[0]/365))+nz(quant_365[0],0)
basis_365_future_20 = spent_365/total_365_future_20
plot(basis_365_future_20, show_last=1, offset=20, linewidth=5, color=#8859CC) 
        
total_365_future_21 = total_365_future_20-(2*(total_365_future_20[0]/365))+nz(quant_365[0],0)
basis_365_future_21 = spent_365/total_365_future_21
plot(basis_365_future_21, show_last=1, offset=21, linewidth=5, color=#8859CC) 
        
total_365_future_22 = total_365_future_21-(2*(total_365_future_21[0]/365))+nz(quant_365[0],0)
basis_365_future_22 = spent_365/total_365_future_22
plot(basis_365_future_22, show_last=1, offset=22, linewidth=5, color=#8859CC) 
        
total_365_future_23 = total_365_future_22-(2*(total_365_future_22[0]/365))+nz(quant_365[0],0)
basis_365_future_23 = spent_365/total_365_future_23
plot(basis_365_future_23, show_last=1, offset=23, linewidth=5, color=#8859CC) 
        
total_365_future_24 = total_365_future_23-(2*(total_365_future_23[0]/365))+nz(quant_365[0],0)
basis_365_future_24 = spent_365/total_365_future_24
plot(basis_365_future_24, show_last=1, offset=24, linewidth=5, color=#8859CC) 
        
total_365_future_25 = total_365_future_24-(2*(total_365_future_24[0]/365))+nz(quant_365[0],0)
basis_365_future_25 = spent_365/total_365_future_25
plot(basis_365_future_25, show_last=1, offset=25, linewidth=5, color=#8859CC) 
        
total_365_future_26 = total_365_future_25-(2*(total_365_future_25[0]/365))+nz(quant_365[0],0)
basis_365_future_26 = spent_365/total_365_future_26
plot(basis_365_future_26, show_last=1, offset=26, linewidth=5, color=#8859CC) 
        
total_365_future_27 = total_365_future_26-(2*(total_365_future_26[0]/365))+nz(quant_365[0],0)
basis_365_future_27 = spent_365/total_365_future_27
plot(basis_365_future_27, show_last=1, offset=27, linewidth=5, color=#8859CC) 
        
total_365_future_28 = total_365_future_27-(2*(total_365_future_27[0]/365))+nz(quant_365[0],0)
basis_365_future_28 = spent_365/total_365_future_28
plot(basis_365_future_28, show_last=1, offset=28, linewidth=5, color=#8859CC) 
        
total_365_future_29 = total_365_future_28-(2*(total_365_future_28[0]/365))+nz(quant_365[0],0)
basis_365_future_29 = spent_365/total_365_future_29
plot(basis_365_future_29, show_last=1, offset=29, linewidth=5, color=#8859CC) 
        
total_365_future_30 = total_365_future_29-(2*(total_365_future_29[0]/365))+nz(quant_365[0],0)
basis_365_future_30 = spent_365/total_365_future_30
plot(basis_365_future_30, show_last=1, offset=30, linewidth=5, color=#8859CC) 
        

milli_180 = milli_interval * 180 
within_180 = time_delta < milli_180
total_180 = 0.0
spent_180 = 180 * dollars
if rolling_window
    spent_180 := within_180 ? nz(spent_180[1])+dollars : 0
    quant_180 = within_180 ? dollars/price : 0.0
    total_180 := nz(total_180[1])+quant_180
else
    quant_180 = dollars/price // how many fractions/units bought this period
    for i = 1 to 180
        total_180 := total_180+quant_180[i]
basis_180 = spent_180/total_180
plot_180 = plot(basis_180, linewidth=4, color=#7748BB, title="180 days of DCA")
fill(plot1=plot_180, plot2=plot_price, color=price > basis_180 ? color_fill_sell : color_fill_buy, transp=color_fill_transp)


milli_120 = milli_interval * 120 
within_120 = time_delta < milli_120
total_120 = 0.0
spent_120 = 120 * dollars
if rolling_window
    spent_120 := within_120 ? nz(spent_120[1])+dollars : 0
    quant_120 = within_120 ? dollars/price : 0.0
    total_120 := nz(total_120[1])+quant_120
else
    quant_120 = dollars/price // how many fractions/units bought this period
    for i = 1 to 120
        total_120 := total_120+quant_120[i]
basis_120 = spent_120/total_120
plot_120 = plot(basis_120, linewidth=3, color=#6637AA, title="120 days of DCA")
fill(plot1=plot_120, plot2=plot_price, color=price > basis_120 ? color_fill_sell : color_fill_buy, transp=color_fill_transp)


milli_90 = milli_interval * 90 
within_90 = time_delta < milli_90
total_90 = 0.0
spent_90 = 90 * dollars
if rolling_window
    spent_90 := within_90 ? nz(spent_90[1])+dollars : 0
    quant_90 = within_90 ? dollars/price : 0.0
    total_90 := nz(total_90[1])+quant_90
else
    quant_90 = dollars/price // how many fractions/units bought this period
    for i = 1 to 90
        total_90 := total_90+quant_90[i]
basis_90 = spent_90/total_90
plot_90 = plot(basis_90, linewidth=2, color=#552699, title="90 days of DCA")
fill(plot1=plot_90, plot2=plot_price, color=price > basis_90 ? color_fill_sell : color_fill_buy, transp=color_fill_transp)


milli_60 = milli_interval * 60 
within_60 = time_delta < milli_60
total_60 = 0.0
spent_60 = 60 * dollars
if rolling_window
    spent_60 := within_60 ? nz(spent_60[1])+dollars : 0
    quant_60 = within_60 ? dollars/price : 0.0
    total_60 := nz(total_60[1])+quant_60
else
    quant_60 = dollars/price // how many fractions/units bought this period
    for i = 1 to 60
        total_60 := total_60+quant_60[i]
basis_60 = spent_60/total_60
plot_60 = plot(basis_60, linewidth=1, color=#441588, title="60 days of DCA")
fill(plot1=plot_60, plot2=plot_price, color=price > basis_60 ? color_fill_sell : color_fill_buy, transp=color_fill_transp)


milli_30 = milli_interval * 30 
within_30 = time_delta < milli_30
total_30 = 0.0
spent_30 = 30 * dollars
if rolling_window
    spent_30 := within_30 ? nz(spent_30[1])+dollars : 0
    quant_30 = within_30 ? dollars/price : 0.0
    total_30 := nz(total_30[1])+quant_30
else
    quant_30 = dollars/price // how many fractions/units bought this period
    for i = 1 to 30
        total_30 := total_30+quant_30[i]
basis_30 = spent_30/total_30
plot_30 = plot(basis_30, linewidth=1, color=#330477, title="30 days of DCA")
fill(plot1=plot_30, plot2=plot_price, color=price > basis_30 ? color_fill_sell : color_fill_buy, transp=color_fill_transp)
